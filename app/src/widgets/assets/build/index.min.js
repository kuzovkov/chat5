"use strict";class Socket{url=null;pathname=null;socket=null;hostname=null;app=null;handlers={};constructor(e){this.app=e,this.url=window.location.host,this.pathname=window.location.pathname}async connect(){var o="wss://"+window.location.host+"/ws/";return console.log("app:",this.app),this.app.options&&this.app.options.room&&(o="wss://"+window.location.host+"/ws/?room="+this.app.options.room),this.app.options&&this.app.options.username&&this.app.options.room&&(o="wss://"+window.location.host+`/ws/?nicname=${this.app.options.username}&room=`+this.app.options.room),this.hostname=window.location.hostname,new Promise((s,e)=>{this.socket=new WebSocket(o),this.socket.keepalive=!0,this.socket.onopen=e=>{console.log("WS Connected!",e),s(this)},this.socket.onmessage=e=>{this.handleMessage(e.data)},this.socket.onerror=e=>{console.log("Error ",e.message)}})}setHandler(e,s){this.handlers[e]=s.bind(this.app)}send(e,s){e=Object.assign({},{type:e},s);this.socket.send(JSON.stringify(e))}handleMessage(e){e=JSON.parse(e),this.handlers[e.type]&&"function"==typeof this.handlers[e.type]?this.handlers[e.type](e):console.log("Unknown ws event type")}}async function sleep(o){return new Promise((e,s)=>{setTimeout(e,o)})}class Login{nicname=null;users_online=[];socket=null;form=null;options={};listReceived=!1;constructor(){this.form=document.getElementById("login-form"),this.form.addEventListener("submit",this.login.bind(this))}fillUsersOnline(e){console.log("fillUsersOnline:",e),e.users_online&&Array.isArray(e.users_online)&&(this.users_online=e.users_online),this.listReceived=!0,console.log("users_online:",this.users_online,"listReceived:",this.listReceived)}async login(e){console.log("e.target:",e.target),console.log("e:",e),e.preventDefault(),console.log("event.defaultPrevented",e.defaultPrevented),document.querySelector('div[class="error"]').innerHTML="";var s=document.querySelector('input[name="username"]').value;for(this.options.username=null,this.options.room=document.querySelector('input[name="room"]').value,this.socket=null,this.socket=new Socket(this),console.log("this.socket:",this.socket),this.socket.setHandler("users_online",this.fillUsersOnline.bind(this)),this.socket.connect(),console.log("this.listReceived:",this.listReceived);!this.listReceived;)await sleep(1e3),console.log("sleep ");console.log("this.users_online:",this.users_online,this.options.username),-1===this.users_online.indexOf(s)?e.target.submit():document.querySelector('div[class="error"]').innerHTML="This NicName already busy! Choose another",this.listReceived=!1}}const login=new Login;